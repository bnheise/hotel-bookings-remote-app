{"ast":null,"code":"import * as actions from '../constants/UserConstants';\nexport const userLoginReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.USER_LOGIN_REQUEST:\n      return {\n        loading: true\n      };\n\n    case actions.USER_LOGIN_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        userInfo: action.payload\n      };\n\n    case actions.USER_LOGIN_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case actions.USER_LOGOUT:\n      return {\n        loading: false,\n        userInfo: null\n      };\n\n    default:\n      return state;\n  }\n};\nexport const userRegisterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.USER_REGISTER_REQUEST:\n      return {\n        loading: true\n      };\n\n    case actions.USER_LOGIN_SUCCESS:\n      return {\n        loading: false,\n        success: true\n      };\n\n    case actions.USER_REGISTER_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const profileUpdateReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.UPDATE_PROFILE_REQUEST:\n      return {\n        loading: true\n      };\n\n    case actions.UPDATE_PROFILE_SUCCESS:\n      return {\n        loading: false,\n        success: true\n      };\n\n    case actions.UPDATE_PROFILE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const passwordUpdateReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.UPDATE_PASSWORD_REQUEST:\n      return {\n        loading: true\n      };\n\n    case actions.UPDATE_PASSWORD_SUCCESS:\n      return {\n        loading: false,\n        success: true\n      };\n\n    case actions.UPDATE_PASSWORD_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const usersFetchReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.FETCH_USERS_REQUEST:\n      return {\n        loading: true\n      };\n\n    case actions.FETCH_USERS_SUCCESS:\n      return {\n        loading: false,\n        users: action.payload.users,\n        page: action.payload.page,\n        pages: action.payload.pages,\n        count: action.payload.count\n      };\n\n    case actions.FETCH_USERS_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const userDetailsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.GET_USER_REQUEST:\n      return {\n        loading: true\n      };\n\n    case actions.GET_USER_SUCCESS:\n      return {\n        loading: false,\n        user: action.payload\n      };\n\n    case actions.GET_USER_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const userUpdateReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.UPDATE_USER_REQUEST:\n      return {\n        loading: true\n      };\n\n    case actions.UPDATE_USER_SUCCESS:\n      return {\n        loading: false,\n        success: true\n      };\n\n    case actions.UPDATE_USER_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case actions.UPDATE_USER_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\nexport const userDeleteReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.DELETE_USER_REQUEST:\n      return {\n        loading: true\n      };\n\n    case actions.DELETE_USER_SUCCESS:\n      return {\n        loading: false,\n        success: true\n      };\n\n    case actions.DELETE_USER_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/brianheise/liferay/training/remote/hotel-booking/frontend/src/redux/reducers/UserReducers.tsx"],"names":["actions","userLoginReducer","state","action","type","USER_LOGIN_REQUEST","loading","USER_LOGIN_SUCCESS","success","userInfo","payload","USER_LOGIN_FAIL","error","USER_LOGOUT","userRegisterReducer","USER_REGISTER_REQUEST","USER_REGISTER_FAIL","profileUpdateReducer","UPDATE_PROFILE_REQUEST","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_FAIL","passwordUpdateReducer","UPDATE_PASSWORD_REQUEST","UPDATE_PASSWORD_SUCCESS","UPDATE_PASSWORD_FAIL","usersFetchReducer","FETCH_USERS_REQUEST","FETCH_USERS_SUCCESS","users","page","pages","count","FETCH_USERS_FAIL","userDetailsReducer","GET_USER_REQUEST","GET_USER_SUCCESS","user","GET_USER_FAIL","userUpdateReducer","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_FAIL","UPDATE_USER_RESET","userDeleteReducer","DELETE_USER_REQUEST","DELETE_USER_SUCCESS","DELETE_USER_FAIL"],"mappings":"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","sourcesContent":["import * as actions from '../constants/UserConstants';\nimport { AnyAction } from 'redux'\n\nexport const userLoginReducer = (state = {}, action: AnyAction) => {\n\n    switch (action.type) {\n        case actions.USER_LOGIN_REQUEST:\n            return {\n                loading: true,\n            };\n        case actions.USER_LOGIN_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                userInfo: action.payload\n            };\n        case actions.USER_LOGIN_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            };\n        case actions.USER_LOGOUT:\n            return {\n                loading: false,\n                userInfo: null\n            };\n        default:\n            return state;\n    }\n\n}\n\nexport const userRegisterReducer = (state = {}, action: any) => {\n\n    switch (action.type) {\n        case actions.USER_REGISTER_REQUEST:\n            return {\n                loading: true\n            };\n        case actions.USER_LOGIN_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n            };\n        case actions.USER_REGISTER_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            };\n        default:\n            return state;\n    }\n\n}\n\nexport const profileUpdateReducer = (state = {}, action: any) => {\n\n    switch (action.type) {\n        case actions.UPDATE_PROFILE_REQUEST:\n            return {\n                loading: true\n            };\n        case actions.UPDATE_PROFILE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n            };\n        case actions.UPDATE_PROFILE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            };\n        default:\n            return state;\n    }\n\n}\n\nexport const passwordUpdateReducer = (state = {}, action: any) => {\n\n    switch (action.type) {\n        case actions.UPDATE_PASSWORD_REQUEST:\n            return {\n                loading: true\n            };\n        case actions.UPDATE_PASSWORD_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n            };\n        case actions.UPDATE_PASSWORD_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            };\n        default:\n            return state;\n    }\n\n}\n\nexport const usersFetchReducer = (state = {}, action: any) => {\n\n    switch (action.type) {\n        case actions.FETCH_USERS_REQUEST:\n            return {\n                loading: true\n            };\n        case actions.FETCH_USERS_SUCCESS:\n            return {\n                loading: false,\n                users: action.payload.users,\n                page: action.payload.page,\n                pages: action.payload.pages,\n                count: action.payload.count,\n            };\n        case actions.FETCH_USERS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            };\n        default:\n            return state;\n    }\n\n}\n\nexport const userDetailsReducer = (state = {}, action: any) => {\n\n    switch (action.type) {\n        case actions.GET_USER_REQUEST:\n            return {\n                loading: true\n            };\n        case actions.GET_USER_SUCCESS:\n            return {\n                loading: false,\n                user: action.payload\n            };\n        case actions.GET_USER_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            };\n        default:\n            return state;\n    }\n\n}\n\nexport const userUpdateReducer = (state = {}, action: any) => {\n\n    switch (action.type) {\n        case actions.UPDATE_USER_REQUEST:\n            return {\n                loading: true\n            };\n        case actions.UPDATE_USER_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            };\n        case actions.UPDATE_USER_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            };\n        case actions.UPDATE_USER_RESET:\n            return {}\n        default:\n            return state;\n    }\n\n}\n\nexport const userDeleteReducer = (state = {}, action: any) => {\n\n    switch (action.type) {\n        case actions.DELETE_USER_REQUEST:\n            return {\n                loading: true\n            };\n        case actions.DELETE_USER_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n            };\n        case actions.DELETE_USER_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            };\n        default:\n            return state;\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}