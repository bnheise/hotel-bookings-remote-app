{"ast":null,"code":"import * as actions from '../constants/RoomConstants';\nconst initialState = {\n  rooms: []\n};\nexport const roomsFetchReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.FETCH_ROOMS_REQUEST:\n      return {\n        loading: true\n      };\n\n    case actions.FETCH_ROOMS_SUCCESS:\n      return {\n        loading: false,\n        rooms: action.payload.rooms,\n        count: action.payload.count\n      };\n\n    case actions.FETCH_ROOMS_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const roomDetailsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    room: {}\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.ROOM_DETAILS_REQUEST:\n      return {\n        loading: true\n      };\n\n    case actions.ROOM_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        room: action.payload\n      };\n\n    case actions.ROOM_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const roomCreateReviewReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.ROOM_CREATE_REVIEW_REQUEST:\n      return {\n        loading: true\n      };\n\n    case actions.ROOM_CREATE_REVIEW_SUCCESS:\n      return {\n        loading: false,\n        success: true\n      };\n\n    case actions.ROOM_CREATE_REVIEW_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const roomCreateReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.CREATE_ROOM_REQUEST:\n      return {\n        loading: true\n      };\n\n    case actions.CREATE_ROOM_SUCCESS:\n      return {\n        loading: false,\n        success: true\n      };\n\n    case actions.CREATE_ROOM_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case actions.CREATE_ROOM_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\nexport const roomUpdateReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.UPDATE_ROOM_REQUEST:\n      return {\n        loading: true\n      };\n\n    case actions.UPDATE_ROOM_SUCCESS:\n      return {\n        loading: false,\n        success: true\n      };\n\n    case actions.UPDATE_ROOM_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case actions.UPDATE_ROOM_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\nexport const roomDeleteReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.DELETE_ROOM_REQUEST:\n      return {\n        loading: true\n      };\n\n    case actions.DELETE_ROOM_SUCCESS:\n      return {\n        loading: false,\n        success: true\n      };\n\n    case actions.DELETE_ROOM_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case actions.DELETE_ROOM_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/brianheise/liferay/training/remote/hotel-booking/frontend/src/redux/reducers/RoomReducers.tsx"],"names":["actions","initialState","rooms","roomsFetchReducer","state","action","type","FETCH_ROOMS_REQUEST","loading","FETCH_ROOMS_SUCCESS","payload","count","FETCH_ROOMS_FAIL","error","roomDetailsReducer","room","ROOM_DETAILS_REQUEST","ROOM_DETAILS_SUCCESS","ROOM_DETAILS_FAIL","roomCreateReviewReducer","ROOM_CREATE_REVIEW_REQUEST","ROOM_CREATE_REVIEW_SUCCESS","success","ROOM_CREATE_REVIEW_FAIL","roomCreateReducer","CREATE_ROOM_REQUEST","CREATE_ROOM_SUCCESS","CREATE_ROOM_FAIL","CREATE_ROOM_RESET","roomUpdateReducer","UPDATE_ROOM_REQUEST","UPDATE_ROOM_SUCCESS","UPDATE_ROOM_FAIL","UPDATE_ROOM_RESET","roomDeleteReducer","DELETE_ROOM_REQUEST","DELETE_ROOM_SUCCESS","DELETE_ROOM_FAIL","DELETE_ROOM_RESET"],"mappings":"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","sourcesContent":["import * as actions from '../constants/RoomConstants';\nimport { AnyAction } from 'redux'\nimport { IRoom } from '../../interfaces/IRoom';\n\nconst initialState: { rooms: IRoom[] } = {\n    rooms: [],\n};\n\nexport const roomsFetchReducer = (state = initialState, action: AnyAction) => {\n    switch (action.type) {\n        case actions.FETCH_ROOMS_REQUEST:\n            return {\n                loading: true\n            };\n        case actions.FETCH_ROOMS_SUCCESS:\n            return {\n                loading: false,\n                rooms: action.payload.rooms,\n                count: action.payload.count\n            };\n        case actions.FETCH_ROOMS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport const roomDetailsReducer = (state = { room: {} }, action: AnyAction) => {\n    switch (action.type) {\n        case actions.ROOM_DETAILS_REQUEST:\n            return {\n                loading: true\n            };\n        case actions.ROOM_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                room: action.payload\n            };\n        case actions.ROOM_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport const roomCreateReviewReducer = (state = {}, action: AnyAction) => {\n    switch (action.type) {\n        case actions.ROOM_CREATE_REVIEW_REQUEST:\n            return {\n                loading: true\n            };\n        case actions.ROOM_CREATE_REVIEW_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            };\n        case actions.ROOM_CREATE_REVIEW_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport const roomCreateReducer = (state = {}, action: AnyAction) => {\n    switch (action.type) {\n        case actions.CREATE_ROOM_REQUEST:\n            return {\n                loading: true\n            };\n        case actions.CREATE_ROOM_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            };\n        case actions.CREATE_ROOM_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case actions.CREATE_ROOM_RESET:\n            return {}\n        default:\n            return state;\n    }\n}\n\nexport const roomUpdateReducer = (state = {}, action: AnyAction) => {\n    switch (action.type) {\n        case actions.UPDATE_ROOM_REQUEST:\n            return {\n                loading: true\n            };\n        case actions.UPDATE_ROOM_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            };\n        case actions.UPDATE_ROOM_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case actions.UPDATE_ROOM_RESET:\n            return {}\n        default:\n            return state;\n    }\n}\n\nexport const roomDeleteReducer = (state = {}, action: AnyAction) => {\n    switch (action.type) {\n        case actions.DELETE_ROOM_REQUEST:\n            return {\n                loading: true\n            };\n        case actions.DELETE_ROOM_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            };\n        case actions.DELETE_ROOM_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case actions.DELETE_ROOM_RESET:\n            return {}\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}