{"ast":null,"code":"var _jsxFileName = \"/Users/brianheise/liferay/training/remote/hotel-booking/frontend/src/screens/HomeScreen.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col } from 'react-bootstrap';\nimport RoomCard from \"../components/RoomCard\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport SearchRooms from \"../components/SearchRooms\";\nimport { fetchRooms } from '../redux/actions/RoomActions';\nimport Paginate from \"../components/Paginate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HomeScreen = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [keyword, setKeyword] = useState(\"\");\n  const [numOfBeds, setNumOfBeds] = useState(\"\");\n  const [roomType, setRoomType] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const {\n    loading,\n    rooms,\n    count,\n    error\n  } = useSelector(state => state.roomsFetch);\n  useEffect(() => {\n    dispatch(fetchRooms(keyword, numOfBeds, roomType, currentPage));\n  }, [dispatch, keyword, numOfBeds, roomType, currentPage]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-4\",\n          children: \"All Rooms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchRooms, {\n      keyword: keyword,\n      setKeyword: setKeyword,\n      numOfBeds: numOfBeds,\n      setNumOfBeds: setNumOfBeds,\n      roomType: roomType,\n      setRoomType: setRoomType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 20\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 41\n      }, this) : rooms.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: rooms.map(room => /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          sm: 6,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(RoomCard, { ...room\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)\n        }, room._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this))\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"info\",\n          children: \"No Room Available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 12,\n        children: count !== 0 && /*#__PURE__*/_jsxDEV(Paginate, {\n          currentPage: currentPage,\n          setCurrentPage: setCurrentPage,\n          totalPosts: count,\n          postPerPage: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomeScreen, \"gDMofUWIZnSSEzGsTsXiYjBLxik=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = HomeScreen;\nexport default HomeScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"sources":["/Users/brianheise/liferay/training/remote/hotel-booking/frontend/src/screens/HomeScreen.tsx"],"names":["React","useState","useEffect","Container","Row","Col","RoomCard","useSelector","useDispatch","Loader","Message","SearchRooms","fetchRooms","Paginate","HomeScreen","dispatch","keyword","setKeyword","numOfBeds","setNumOfBeds","roomType","setRoomType","currentPage","setCurrentPage","loading","rooms","count","error","state","roomsFetch","length","map","room","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col } from 'react-bootstrap';\nimport RoomCard from \"../components/RoomCard\";\nimport { useSelector, useDispatch, RootStateOrAny } from 'react-redux';\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { IRoom } from '../interfaces/IRoom';\nimport SearchRooms from \"../components/SearchRooms\";\nimport { fetchRooms } from '../redux/actions/RoomActions';\nimport Paginate from \"../components/Paginate\";\n\n\nconst HomeScreen = () => {\n\n  const dispatch = useDispatch();\n\n  const [keyword, setKeyword] = useState<string>(\"\");\n  const [numOfBeds, setNumOfBeds] = useState<number | string>(\"\");\n  const [roomType, setRoomType] = useState<string>(\"\");\n\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const { loading, rooms, count, error } = useSelector((state: RootStateOrAny) => state.roomsFetch);\n\n  useEffect(() => {\n    dispatch(fetchRooms(keyword, numOfBeds, roomType, currentPage));\n  }, [dispatch, keyword, numOfBeds, roomType, currentPage]);\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h2 className=\"mb-4\">All Rooms</h2>\n        </Col>\n      </Row>\n      <SearchRooms \n        keyword={keyword} \n        setKeyword={setKeyword}\n        numOfBeds={numOfBeds}\n        setNumOfBeds={setNumOfBeds}\n        roomType={roomType}\n        setRoomType={setRoomType}\n      />\n      <Row>\n        {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : rooms.length > 0 ?\n          <>\n            {rooms.map((room: IRoom) =>\n              <Col key={room._id} md={3} sm={6} xs={12} >\n                <RoomCard {...room} />\n              </Col>\n            )}\n          </>\n        : (\n          <>\n            <Message variant=\"info\">No Room Available</Message>\n          </>\n        )}\n      </Row>\n      <Row>\n        <Col md={12}>\n          {count !== 0 && (\n            <Paginate\n              currentPage={currentPage}\n              setCurrentPage={setCurrentPage}\n              totalPosts={count}\n              postPerPage={4}\n            />\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default HomeScreen;\n"]},"metadata":{},"sourceType":"module"}