{"ast":null,"code":"var _jsxFileName = \"/Users/brianheise/liferay/training/remote/hotel-booking/frontend/src/screens/RoomDetailsScreen.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getRoomDetails } from '../redux/actions/RoomActions';\nimport Loader from '../components/Loader';\nimport { Container, Row, Col, Carousel, Button, Card } from 'react-bootstrap';\nimport FormReview from '../components/FormReview';\nimport Message from '../components/Message';\nimport Rating from '../components/Rating';\nimport { checkRoomBooking } from '../redux/actions/BookingActions';\nimport ListReviews from '../components/ListReviews';\nimport RoomFeatures from '../components/RoomFeatures';\nimport { useAuthStatus } from '../hooks/useAuthStatus';\nimport { Link } from 'react-router-dom';\nimport { CHECK_ROOM_BOOKING_RESET, CREATE_BOOKING_RESET } from '../redux/constants/BookingConstants';\nimport { instance as axios } from '../axios';\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport { createBooking } from '../redux/actions/BookingActions';\nimport { getBookedDates } from '../redux/actions/BookingActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RoomDetailsScreen = () => {\n  _s();\n\n  var _room$images;\n\n  const {\n    loggedIn\n  } = useAuthStatus();\n  const [checkInDate, setCheckInDate] = useState();\n  const [checkOutDate, setCheckOutDate] = useState();\n  const [daysOfStay, setDaysOfStay] = useState(0);\n  const [sdkReady, setSdkReady] = useState(false);\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch();\n  const {\n    loading,\n    room,\n    error\n  } = useSelector(state => state.roomDetails);\n  const {\n    loading: loadingCreateReview,\n    success: successCreateReview,\n    error: errorCreateReview\n  } = useSelector(state => state.roomCreateReview);\n  const {\n    loading: loadingRoomIsAvailable,\n    success: successRoomIsAvailable,\n    error: errorRoomIsAvailable\n  } = useSelector(state => state.roomBookingCheck);\n  const {\n    loading: loadingBookingCreate,\n    success: successBookingCreate,\n    error: errorBookingCreate\n  } = useSelector(state => state.bookingCreate);\n  const {\n    bookedDates\n  } = useSelector(state => state.bookedDates);\n  useEffect(() => {\n    const addPaypalScript = async () => {\n      const {\n        data: clientId\n      } = await axios.get(\"/api/config/paypal\");\n      const script = document.createElement(\"script\");\n      script.type = \"text/javascript\";\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n      script.async = true;\n\n      script.onload = () => {\n        setSdkReady(true);\n      };\n\n      document.body.appendChild(script);\n    };\n\n    if (!window.paypal && !successBookingCreate) {\n      addPaypalScript();\n    } else {\n      setSdkReady(true);\n    }\n\n    dispatch(getRoomDetails(id));\n    dispatch(getBookedDates(id));\n    dispatch({\n      type: CHECK_ROOM_BOOKING_RESET\n    });\n    dispatch({\n      type: CREATE_BOOKING_RESET\n    });\n  }, [dispatch, id]);\n\n  const onChange = dates => {\n    const [checkInDate, checkOutDate] = dates;\n    setCheckInDate(checkInDate);\n    setCheckOutDate(checkOutDate);\n\n    if (checkInDate && checkOutDate) {\n      // Calclate days of stay\n      const days = Math.abs(checkInDate - checkOutDate) / (1000 * 60 * 60 * 24);\n      setDaysOfStay(days);\n      dispatch(checkRoomBooking(id, checkInDate.toISOString(), checkOutDate.toISOString()));\n    }\n  };\n\n  const excludedDates = [];\n  bookedDates === null || bookedDates === void 0 ? void 0 : bookedDates.forEach(date => {\n    excludedDates.push(new Date(date));\n  });\n\n  const successPaymentHandler = paymentResult => {\n    const amountPaid = Number(room.pricePerNight) * Number(daysOfStay);\n    const paymentInfo = {\n      id: paymentResult.id,\n      status: paymentResult.status,\n      update_time: paymentResult.update_time,\n      email_address: paymentResult.payer.email_address\n    };\n    const bookingData = {\n      room: id,\n      checkInDate,\n      checkOutDate,\n      amountPaid,\n      paymentInfo,\n      daysOfStay\n    };\n    dispatch(createBooking(bookingData));\n    dispatch(getBookedDates(id));\n    dispatch({\n      type: CHECK_ROOM_BOOKING_RESET\n    });\n    dispatch({\n      type: CREATE_BOOKING_RESET\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"pb-4\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 28\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 49\n      }, this) : /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"mb-2\",\n          children: room.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"d-block mb-2\",\n          children: room.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Rating, {\n          reviews: room.ratings\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"carousel-room mt-3 mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Carousel, {\n            children: (_room$images = room.images) === null || _room$images === void 0 ? void 0 : _room$images.map(img => /*#__PURE__*/_jsxDEV(Carousel.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"d-block w-100\",\n                src: img.image,\n                alt: img._id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 41\n              }, this)\n            }, img._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            sm: 12,\n            md: 8,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: room.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(RoomFeatures, {\n              room: room\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"mt-3 mb-4\",\n              children: \"Reviews\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 33\n            }, this), errorCreateReview && /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"danger\",\n              children: errorCreateReview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 55\n            }, this), successCreateReview && /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"success\",\n              children: \"Added Review\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 57\n            }, this), /*#__PURE__*/_jsxDEV(FormReview, {\n              idRoom: room._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 33\n            }, this), loadingCreateReview && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 57\n            }, this), /*#__PURE__*/_jsxDEV(ListReviews, {\n              roomReviews: room.reviews\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            sm: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"shadow p-3 mb-5 bg-body rounded\",\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: [\"$\", room.pricePerNight, \" / Per Night\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"mb-3\",\n                  children: \"Pick Check In & Check Out Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                  dateFormat: \"DD-MM-YYYY\",\n                  className: \"w-100\",\n                  selected: checkInDate,\n                  onChange: onChange,\n                  startDate: checkInDate,\n                  endDate: checkOutDate,\n                  minDate: new Date(),\n                  excludeDates: excludedDates,\n                  selectsRange: true,\n                  inline: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 41\n                }, this), loadingRoomIsAvailable && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 68\n                }, this), successRoomIsAvailable && /*#__PURE__*/_jsxDEV(Message, {\n                  variant: \"success\",\n                  children: \"Room Is Available\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 68\n                }, this), errorRoomIsAvailable && /*#__PURE__*/_jsxDEV(Message, {\n                  variant: \"danger\",\n                  children: errorRoomIsAvailable\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 66\n                }, this), loggedIn && successRoomIsAvailable && /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"lg\",\n                  variant: \"primary\",\n                  className: \"mb-3\",\n                  children: [\"Pay $\", Number(room.pricePerNight) * Number(daysOfStay)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 45\n                }, this), !sdkReady && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 55\n                }, this), loggedIn && successRoomIsAvailable && sdkReady && !successBookingCreate && /*#__PURE__*/_jsxDEV(PayPalButton, {\n                  amount: Number(room.pricePerNight) * Number(daysOfStay),\n                  onSuccess: successPaymentHandler\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 45\n                }, this), !loggedIn && !successRoomIsAvailable && /*#__PURE__*/_jsxDEV(Message, {\n                  variant: \"info\",\n                  children: [\"Please \", /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/login\",\n                    children: \"Sign In\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 56\n                  }, this), \" for booking\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 45\n                }, this), successBookingCreate && /*#__PURE__*/_jsxDEV(Message, {\n                  variant: \"success\",\n                  children: \"Your booking has been paymented\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 45\n                }, this), errorBookingCreate && /*#__PURE__*/_jsxDEV(Message, {\n                  variant: \"success\",\n                  children: errorBookingCreate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RoomDetailsScreen, \"DgaTNRSNIoCqpVfNCvx1EGbVnkQ=\", false, function () {\n  return [useAuthStatus, useParams, useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = RoomDetailsScreen;\nexport default RoomDetailsScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoomDetailsScreen\");","map":{"version":3,"sources":["/Users/brianheise/liferay/training/remote/hotel-booking/frontend/src/screens/RoomDetailsScreen.tsx"],"names":["React","useState","useEffect","DatePicker","useParams","useSelector","useDispatch","getRoomDetails","Loader","Container","Row","Col","Carousel","Button","Card","FormReview","Message","Rating","checkRoomBooking","ListReviews","RoomFeatures","useAuthStatus","Link","CHECK_ROOM_BOOKING_RESET","CREATE_BOOKING_RESET","instance","axios","PayPalButton","createBooking","getBookedDates","RoomDetailsScreen","loggedIn","checkInDate","setCheckInDate","checkOutDate","setCheckOutDate","daysOfStay","setDaysOfStay","sdkReady","setSdkReady","id","dispatch","loading","room","error","state","roomDetails","loadingCreateReview","success","successCreateReview","errorCreateReview","roomCreateReview","loadingRoomIsAvailable","successRoomIsAvailable","errorRoomIsAvailable","roomBookingCheck","loadingBookingCreate","successBookingCreate","errorBookingCreate","bookingCreate","bookedDates","addPaypalScript","data","clientId","get","script","document","createElement","type","src","async","onload","body","appendChild","window","paypal","onChange","dates","days","Math","abs","toISOString","excludedDates","forEach","date","push","Date","successPaymentHandler","paymentResult","amountPaid","Number","pricePerNight","paymentInfo","status","update_time","email_address","payer","bookingData","name","address","ratings","images","map","img","image","_id","description","reviews"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch, RootStateOrAny } from 'react-redux';\nimport { getRoomDetails } from '../redux/actions/RoomActions';\nimport { IRoom } from '../interfaces/IRoom';\nimport Loader from '../components/Loader';\nimport { Container, Row, Col, Carousel, Button, Card } from 'react-bootstrap';\nimport FormReview from '../components/FormReview';\nimport Message from '../components/Message';\nimport Rating from '../components/Rating';\nimport { checkRoomBooking } from '../redux/actions/BookingActions';\nimport ListReviews from '../components/ListReviews';\nimport RoomFeatures from '../components/RoomFeatures';\nimport { useAuthStatus } from '../hooks/useAuthStatus';\nimport { Link } from 'react-router-dom';\nimport { CHECK_ROOM_BOOKING_RESET, CREATE_BOOKING_RESET } from '../redux/constants/BookingConstants';\nimport { instance as axios } from '../axios';\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport { createBooking } from '../redux/actions/BookingActions';\nimport { getBookedDates } from '../redux/actions/BookingActions';\nimport { IBooking } from '../interfaces/IBooking';\n\n\ntype TId = {\n    id: IRoom['_id']\n}\n\ndeclare global {\n    interface Window {\n        paypal: any;\n    }\n}\n\nconst RoomDetailsScreen = () => {\n\n    const { loggedIn } = useAuthStatus();\n\n    const [checkInDate, setCheckInDate] = useState<IBooking['checkInDate']>();\n    const [checkOutDate, setCheckOutDate] = useState<IBooking['checkOutDate']>();\n    const [daysOfStay, setDaysOfStay] = useState<IBooking['daysOfStay']>(0);\n\n    const [sdkReady, setSdkReady] = useState<Boolean>(false);\n\n    const { id } = useParams<TId>();\n\n    const dispatch = useDispatch();\n\n    const { loading, room, error } = useSelector((state: RootStateOrAny) => state.roomDetails);\n\n    const { loading: loadingCreateReview, success: successCreateReview, error: errorCreateReview } =\n        useSelector((state: RootStateOrAny) => state.roomCreateReview);\n\n    const { loading: loadingRoomIsAvailable, success: successRoomIsAvailable, error: errorRoomIsAvailable }\n        = useSelector((state: RootStateOrAny) => state.roomBookingCheck);\n\n    const { loading: loadingBookingCreate, success: successBookingCreate, error: errorBookingCreate }\n        = useSelector((state: RootStateOrAny) => state.bookingCreate);\n\n    const { bookedDates } = useSelector((state: RootStateOrAny) => state.bookedDates);\n\n    useEffect(() => {\n\n        const addPaypalScript = async () => {\n            const { data: clientId } = await axios.get(\"/api/config/paypal\");\n            const script = document.createElement(\"script\");\n            script.type = \"text/javascript\";\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n            script.async = true;\n            script.onload = () => {\n                setSdkReady(true);\n            };\n            document.body.appendChild(script);\n        };\n\n        if (!window.paypal && !successBookingCreate) {\n            addPaypalScript();\n        } else {\n            setSdkReady(true);\n        }\n\n        dispatch(getRoomDetails(id as string));\n        dispatch(getBookedDates(id as string));\n        dispatch({ type: CHECK_ROOM_BOOKING_RESET });\n        dispatch({ type: CREATE_BOOKING_RESET });\n    }, [dispatch, id]);\n\n    const onChange = (dates: any) => {\n        const [checkInDate, checkOutDate] = dates;\n        setCheckInDate(checkInDate as Date);\n        setCheckOutDate(checkOutDate as Date);\n\n        if (checkInDate && checkOutDate) {\n\n            // Calclate days of stay\n\n            const days = Math.abs(checkInDate - checkOutDate) / (1000 * 60 * 60 * 24);\n\n            setDaysOfStay(days);\n\n            dispatch(checkRoomBooking(id as string, checkInDate.toISOString(), checkOutDate.toISOString()));\n\n        }\n\n    }\n\n    const excludedDates: any[] = []\n    bookedDates?.forEach((date: Date) => {\n        excludedDates.push(new Date(date))\n    })\n\n    const successPaymentHandler = (paymentResult: any) => {\n\n        const amountPaid = Number(room.pricePerNight) * Number(daysOfStay);\n\n        const paymentInfo = {\n            id: paymentResult.id,\n            status: paymentResult.status,\n            update_time: paymentResult.update_time,\n            email_address: paymentResult.payer.email_address,\n        }\n\n        const bookingData = {\n            room: id,\n            checkInDate,\n            checkOutDate,\n            amountPaid,\n            paymentInfo,\n            daysOfStay,\n        }\n\n        dispatch(createBooking(bookingData));\n        dispatch(getBookedDates(id as string));\n        dispatch({ type: CHECK_ROOM_BOOKING_RESET });\n        dispatch({ type: CREATE_BOOKING_RESET });\n\n    }\n\n    return (\n        <Container className=\"pb-4\">\n            <Row>\n                {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\n                    <Col>\n                        <h1 className=\"mb-2\">{room.name}</h1>\n                        <span className=\"d-block mb-2\">{room.address}</span>\n                        <Rating reviews={room.ratings} />\n                        <div className=\"carousel-room mt-3 mb-3\">\n                            <Carousel>\n                                {room.images?.map((img: any) =>\n                                    <Carousel.Item key={img._id}>\n                                        <img\n                                            className=\"d-block w-100\"\n                                            src={img.image}\n                                            alt={img._id}\n                                        />\n                                    </Carousel.Item>\n                                )}\n                            </Carousel>\n                        </div>\n                        <Row>\n                            <Col xs={12} sm={12} md={8}>\n                                <h3>Description</h3>\n                                <p>\n                                    {room.description}\n                                </p>\n\n                                <RoomFeatures room={room} />\n\n                                <h4 className=\"mt-3 mb-4\">Reviews</h4>\n\n                                {errorCreateReview && <Message variant=\"danger\">{errorCreateReview}</Message>}\n                                {successCreateReview && <Message variant=\"success\">Added Review</Message>}\n\n                                <FormReview idRoom={room._id} />\n\n                                <hr />\n                                {loadingCreateReview && <Loader />}\n\n                                <ListReviews roomReviews={room.reviews} />\n\n                            </Col>\n                            <Col xs={12} sm={12} md={4}>\n                                <Card className=\"shadow p-3 mb-5 bg-body rounded\">\n                                    <Card.Body>\n                                        <Card.Title>${room.pricePerNight} / Per Night</Card.Title>\n                                        <hr />\n                                        <p className=\"mb-3\">Pick Check In & Check Out Date</p>\n                                        <DatePicker\n                                            dateFormat=\"DD-MM-YYYY\"\n                                            className='w-100'\n                                            selected={checkInDate}\n                                            onChange={onChange}\n                                            startDate={checkInDate}\n                                            endDate={checkOutDate}\n                                            minDate={new Date()}\n                                            excludeDates={excludedDates}\n                                            selectsRange\n                                            inline\n                                        />\n                                        {loadingRoomIsAvailable && <Loader />}\n                                        {successRoomIsAvailable && <Message variant=\"success\">Room Is Available</Message>}\n                                        {errorRoomIsAvailable && <Message variant=\"danger\">{errorRoomIsAvailable}</Message>}\n\n                                        {loggedIn && successRoomIsAvailable && (\n                                            <Button size=\"lg\" variant=\"primary\" className=\"mb-3\">\n                                                Pay ${Number(room.pricePerNight) * Number(daysOfStay)}\n                                            </Button>\n                                        )}\n\n                                        {!sdkReady && <Loader />}\n\n                                        {loggedIn && successRoomIsAvailable && sdkReady && !successBookingCreate && (\n                                            <PayPalButton\n                                                amount={Number(room.pricePerNight) * Number(daysOfStay)}\n                                                onSuccess={successPaymentHandler}\n                                            />\n                                        )}\n\n                                        {!loggedIn && !successRoomIsAvailable && (\n                                            <Message variant=\"info\">\n                                                Please <Link to=\"/login\">Sign In</Link> for booking\n                                            </Message>\n                                        )}\n\n                                        {successBookingCreate && (\n                                            <Message variant=\"success\">\n                                                Your booking has been paymented\n                                            </Message>\n                                        )}\n\n                                        {errorBookingCreate && (\n                                            <Message variant=\"success\">\n                                                {errorBookingCreate}\n                                            </Message>\n                                        )}\n\n                                    </Card.Body>\n                                </Card>\n                            </Col>\n                        </Row>\n                    </Col>\n                )}\n            </Row>\n        </Container>\n    );\n};\n\nexport default RoomDetailsScreen;\n"]},"metadata":{},"sourceType":"module"}