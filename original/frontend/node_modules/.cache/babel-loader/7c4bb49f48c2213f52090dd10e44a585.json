{"ast":null,"code":"var _jsxFileName = \"/Users/brianheise/liferay/training/remote/hotel-booking/frontend/src/screens/LoginScreen.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport { login } from '../redux/actions/UserActions';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginScreen = () => {\n  _s();\n\n  let navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    userInfo,\n    loading,\n    error,\n    success\n  } = useSelector(state => state.userLogin);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(login({\n      email,\n      password\n    }));\n  };\n\n  useEffect(() => {\n    if (success || userInfo) {\n      navigate(\"/\");\n    }\n  }, [userInfo, success, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-4\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"email\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"E-Mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              value: email,\n              placeholder: \"E-Mail\",\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"password\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              value: password,\n              placeholder: \"Password\",\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 40\n              }, this) : `Login`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }, this);\n};\n\n_s(LoginScreen, \"J26HPct/MlWxf7tq9mtYe49x7H4=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n\n_c = LoginScreen;\nexport default LoginScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"sources":["/Users/brianheise/liferay/training/remote/hotel-booking/frontend/src/screens/LoginScreen.tsx"],"names":["React","useState","useEffect","useNavigate","useSelector","useDispatch","Container","Row","Col","Form","Button","login","Message","Loader","LoginScreen","navigate","dispatch","email","setEmail","password","setPassword","userInfo","loading","error","success","state","userLogin","handleSubmit","e","preventDefault","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyD,aAAzD;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoCC,MAApC,QAAkD,iBAAlD;AACA,SAASC,KAAT,QAAsB,8BAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAGA,MAAMC,WAAqB,GAAG,MAAM;AAAA;;AAEhC,MAAIC,QAAQ,GAAGZ,WAAW,EAA1B;AACA,QAAMa,QAAQ,GAAGX,WAAW,EAA5B;AAEA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAiB,EAAjB,CAAlC;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAoB,EAApB,CAAxC;AAEA,QAAM;AAAEoB,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA,KAArB;AAA4BC,IAAAA;AAA5B,MAAwCpB,WAAW,CAAEqB,KAAD,IAA2BA,KAAK,CAACC,SAAlC,CAAzD;;AAGA,QAAMC,YAAY,GAAIC,CAAD,IAAwB;AACzCA,IAAAA,CAAC,CAACC,cAAF;AACAb,IAAAA,QAAQ,CAACL,KAAK,CAAC;AAAEM,MAAAA,KAAF;AAASE,MAAAA;AAAT,KAAD,CAAN,CAAR;AACH,GAHD;;AAKAjB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGsB,OAAO,IAAIH,QAAd,EAAwB;AACpBN,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACH;AACJ,GAJQ,EAIN,CAACM,QAAD,EAAWG,OAAX,EAAoBR,QAApB,CAJM,CAAT;AAOF,sBACI,QAAC,SAAD;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE,CAAjB;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKO,KAAK,iBAAI,QAAC,OAAD;AAAS,UAAA,OAAO,EAAC,QAAjB;AAAA,oBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAFd,eAGI,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAEI,YAAhB;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,OAAtB;AAA8B,YAAA,SAAS,EAAC,MAAxC;AAAA,oCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,cAAA,IAAI,EAAC,OADT;AAEI,cAAA,KAAK,EAAEV,KAFX;AAGI,cAAA,WAAW,EAAC,QAHhB;AAII,cAAA,QAAQ,EAAGW,CAAD,IAAOV,QAAQ,CAACU,CAAC,CAACE,MAAF,CAASC,KAAV;AAJ7B;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAWI,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,UAAtB;AAAiC,YAAA,SAAS,EAAC,MAA3C;AAAA,oCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,cAAA,IAAI,EAAC,UADT;AAEI,cAAA,KAAK,EAAEZ,QAFX;AAGI,cAAA,WAAW,EAAC,UAHhB;AAII,cAAA,QAAQ,EAAGS,CAAD,IAAOR,WAAW,CAACQ,CAAC,CAACE,MAAF,CAASC,KAAV;AAJhC;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXJ,eAqBI,QAAC,IAAD,CAAM,KAAN;AAAA,mCACI,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,SAAhB;AAA0B,cAAA,IAAI,EAAC,QAA/B;AAAA,wBACKT,OAAO,gBAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,sBAAH,GAAiB;AAD7B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAqCD,CA5DD;;GAAMR,W;UAEaX,W,EACEE,W,EAK6BD,W;;;KAR5CU,W;AA8DN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch, RootStateOrAny } from 'react-redux';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport { login } from '../redux/actions/UserActions';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { IUser } from '../interfaces/IUser';\n\nconst LoginScreen: React.FC = () => {\n\n    let navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    const [email, setEmail] = useState<IUser['email']>(\"\");\n    const [password, setPassword] = useState<IUser['password']>(\"\");\n\n    const { userInfo, loading, error, success } = useSelector((state: RootStateOrAny) => state.userLogin);\n\n\n    const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        dispatch(login({ email, password }));\n    }\n\n    useEffect(() => {\n        if(success || userInfo) {\n            navigate(\"/\");\n        }\n    }, [userInfo, success, dispatch]);\n    \n\n  return (\n      <Container>\n        <Row className='justify-content-center'>\n            <Col xs={12} md={6}>\n                <h2 className=\"mb-4\">Login</h2>\n                {error && <Message variant=\"danger\">{error}</Message>}\n                <Form onSubmit={handleSubmit}>\n                    <Form.Group controlId=\"email\" className=\"mb-3\">\n                        <Form.Label>E-Mail</Form.Label>\n                        <Form.Control \n                            type=\"email\" \n                            value={email} \n                            placeholder=\"E-Mail\" \n                            onChange={(e) => setEmail(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId=\"password\" className=\"mb-3\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control \n                            type=\"password\" \n                            value={password} \n                            placeholder=\"Password\" \n                            onChange={(e) => setPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group>\n                        <Button variant=\"primary\" type=\"submit\">\n                            {loading ? <Loader /> : `Login`}\n                        </Button>\n                    </Form.Group>\n                </Form>\n            </Col>\n        </Row>\n    </Container>\n  );\n};\n\nexport default LoginScreen;\n"]},"metadata":{},"sourceType":"module"}