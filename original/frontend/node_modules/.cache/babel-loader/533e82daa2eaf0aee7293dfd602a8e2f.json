{"ast":null,"code":"var _jsxFileName = \"/Users/brianheise/liferay/training/remote/hotel-booking/frontend/src/screens/AdminEditRoomScreen.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getRoomDetails } from '../redux/actions/RoomActions';\nimport { Container, Row, Col, Form, FormGroup, Button, FloatingLabel, Image } from 'react-bootstrap';\nimport { updateRoom } from '../redux/actions/RoomActions';\nimport { instance as axios } from '../../axios';\nimport { UPDATE_ROOM_RESET } from '../redux/constants/RoomConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AdminEditRoomScreen = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  let navigate = useNavigate();\n  let {\n    id\n  } = useParams();\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [guestCapacity, setGuestCapacity] = useState(0);\n  const [numOfBeds, setNumOfBeds] = useState(0);\n  const [roomType, setRoomType] = useState(\"King\");\n  const [internet, setInternet] = useState(false);\n  const [airConditioned, setAirConditioned] = useState(false);\n  const [breakfast, setBreakfast] = useState(false);\n  const [petsAllowed, setPetsAllowed] = useState(false);\n  const [roomCleaning, setRoomCleaning] = useState(false);\n  const [price, setPrice] = useState(0);\n  const [oldImages, setOldImages] = useState([]);\n  const [newImages, setNewImages] = useState(null);\n  const {\n    loading: loadingUpdate,\n    success: successUpdate,\n    error: errorUpdate\n  } = useSelector(state => state.roomUpdate);\n  const {\n    room,\n    loading,\n    error\n  } = useSelector(state => state.roomDetails);\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch(getRoomDetails(id));\n      navigate(\"/admin/rooms\");\n      dispatch({\n        type: UPDATE_ROOM_RESET\n      });\n    }\n\n    if (!(room !== null && room !== void 0 && room.name) || room._id !== id) {\n      dispatch(getRoomDetails(id));\n    } else {\n      setName(room.name);\n      setDescription(room.description);\n      setAddress(room.address);\n      setGuestCapacity(room.guestCapacity);\n      setNumOfBeds(room.numOfBeds);\n      setRoomType(room.roomType);\n      setInternet(room.internet);\n      setAirConditioned(room.petsAllowed);\n      setBreakfast(room.breakfast);\n      setPetsAllowed(room.petsAllowed);\n      setRoomCleaning(room.roomCleaning);\n      setPrice(room.pricePerNight);\n      setOldImages(room.images);\n    }\n  }, [dispatch, room, successUpdate, id]);\n\n  const removeImage = imageId => {\n    const removedImage = oldImages.filter(e => e._id !== imageId);\n    setOldImages(removedImage);\n  };\n\n  const uploadImagesHandler = e => {\n    var _target$files;\n\n    const target = e.target;\n\n    if (!((_target$files = target.files) !== null && _target$files !== void 0 && _target$files.length)) {\n      return;\n    }\n\n    const files = target.files;\n    setNewImages(files);\n  };\n\n  const handlerSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n\n    for (let i = 0; i < (newImages === null || newImages === void 0 ? void 0 : newImages.length); i++) {\n      formData.append(\"image\", newImages[i]);\n    }\n\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      };\n      const {\n        data\n      } = await axios.post(\"/api/uploads\", formData, config);\n      const allImages = oldImages;\n\n      for (let i = 0; i < (data === null || data === void 0 ? void 0 : data.length); i++) {\n        allImages.push({\n          image: `/${data[i].path.toString().replace(\"\\\\\", \"/\")}`\n        });\n      }\n\n      dispatch(updateRoom(id, {\n        name,\n        description,\n        address,\n        guestCapacity,\n        numOfBeds,\n        category: roomType,\n        internet,\n        airConditioned,\n        breakfast,\n        petsAllowed,\n        roomCleaning,\n        pricePerNight: price,\n        images: allImages\n      }));\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 12,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"mb-3\",\n          children: \"Edit Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 12,\n        children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 32\n        }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 53\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n            variant: \"danger\",\n            children: errorUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handlerSubmit,\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              controlId: \"name\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Name\",\n                name: \"name\",\n                value: name,\n                onChange: e => setName(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              className: \"mt-3 mb-3\",\n              children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n                controlId: \"description\",\n                label: \"Description\",\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"textarea\",\n                  placeholder: \"Description\",\n                  name: \"description\",\n                  value: description,\n                  onChange: e => setDescription(e.target.value),\n                  style: {\n                    height: '100px'\n                  },\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              controlId: \"address\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Address\",\n                name: \"address\",\n                value: address,\n                onChange: e => setAddress(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"mt-3 mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                md: 4,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  controlId: \"guestCapacity\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Guest Capacity\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                    name: \"guestCapacity\",\n                    value: Number(guestCapacity),\n                    onChange: e => setGuestCapacity(Number(e.target.value)),\n                    \"aria-label\": \"Default select example\",\n                    children: [1, 2, 3, 4, 5].map(guest => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: guest,\n                      children: guest\n                    }, guest, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 185,\n                      columnNumber: 53\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 4,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  controlId: \"numOfBeds\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Num Of Beds\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                    name: \"numOfBeds\",\n                    value: Number(numOfBeds),\n                    onChange: e => setNumOfBeds(Number(e.target.value)),\n                    \"aria-label\": \"Default select example\",\n                    children: [1, 2, 3, 4, 5].map(numOfBeds => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: numOfBeds,\n                      children: numOfBeds\n                    }, numOfBeds, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 202,\n                      columnNumber: 53\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 4,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  controlId: \"roomType\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Room Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                    name: \"roomType\",\n                    value: roomType,\n                    onChange: e => setRoomType(e.target.value),\n                    \"aria-label\": \"Default select example\",\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"King\",\n                      children: \"King\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Single\",\n                      children: \"Single\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Twins\",\n                      children: \"Twins\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                md: 2,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"internet\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                    type: \"checkbox\",\n                    label: \"Internet\",\n                    checked: internet ? true : false,\n                    onChange: e => setInternet(!internet)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 2,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"breakfast\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                    type: \"checkbox\",\n                    label: \"Breakfast\",\n                    checked: breakfast ? true : false,\n                    onChange: e => setBreakfast(!breakfast)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 2,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"airConditioned\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                    type: \"checkbox\",\n                    label: \"Air Conditioned\",\n                    checked: airConditioned ? true : false,\n                    onChange: e => setAirConditioned(!airConditioned)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 2,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"petsAllowed\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                    type: \"checkbox\",\n                    label: \"Pets Allowed\",\n                    checked: petsAllowed ? true : false,\n                    onChange: e => setPetsAllowed(!petsAllowed)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 2,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"roomCleaning\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                    type: \"checkbox\",\n                    label: \"Room Cleaning\",\n                    checked: roomCleaning ? true : false,\n                    onChange: e => setRoomCleaning(!roomCleaning)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              className: \"mb-3\",\n              controlId: \"price\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                value: Number(price),\n                onChange: e => setPrice(Number(e.target.value)),\n                placeholder: \"Price Per Night\",\n                min: \"10\",\n                max: \"100\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              className: \"mb-3\",\n              controlId: \"images\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"file\",\n                name: \"images\",\n                onChange: uploadImagesHandler,\n                multiple: true,\n                required: oldImages.length === 0 ? true : false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"images-preview mb-4\",\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: oldImages.map(image => /*#__PURE__*/_jsxDEV(Col, {\n                  md: 3,\n                  children: [/*#__PURE__*/_jsxDEV(Image, {\n                    src: image.image,\n                    alt: \"Image Room\",\n                    fluid: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"mt-2\",\n                    onClick: () => removeImage(image._id),\n                    children: \"Remove Image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 49\n                  }, this)]\n                }, image._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              className: \"mb-4\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                children: loadingUpdate ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 58\n                }, this) : `Update`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AdminEditRoomScreen, \"NbhX/J7nRL45Mxu+gN3+C5yu0XQ=\", false, function () {\n  return [useDispatch, useNavigate, useParams, useSelector, useSelector];\n});\n\n_c = AdminEditRoomScreen;\nexport default AdminEditRoomScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminEditRoomScreen\");","map":{"version":3,"sources":["/Users/brianheise/liferay/training/remote/hotel-booking/frontend/src/screens/AdminEditRoomScreen.tsx"],"names":["React","useState","useEffect","useDispatch","useSelector","useNavigate","useParams","Message","Loader","getRoomDetails","Container","Row","Col","Form","FormGroup","Button","FloatingLabel","Image","updateRoom","instance","axios","UPDATE_ROOM_RESET","AdminEditRoomScreen","dispatch","navigate","id","name","setName","description","setDescription","address","setAddress","guestCapacity","setGuestCapacity","numOfBeds","setNumOfBeds","roomType","setRoomType","internet","setInternet","airConditioned","setAirConditioned","breakfast","setBreakfast","petsAllowed","setPetsAllowed","roomCleaning","setRoomCleaning","price","setPrice","oldImages","setOldImages","newImages","setNewImages","loading","loadingUpdate","success","successUpdate","error","errorUpdate","state","roomUpdate","room","roomDetails","type","_id","pricePerNight","images","removeImage","imageId","removedImage","filter","e","uploadImagesHandler","target","files","length","handlerSubmit","preventDefault","formData","FormData","i","append","config","headers","data","post","allImages","push","image","path","toString","replace","category","console","log","message","value","height","Number","map","guest"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { RootStateOrAny, useDispatch, useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getRoomDetails } from '../redux/actions/RoomActions';\nimport { IRoom, TImage } from '../interfaces/IRoom';\nimport { Container, Row, Col, Form, FormGroup, Button, FloatingLabel, Image } from 'react-bootstrap';\nimport { updateRoom } from '../redux/actions/RoomActions';\nimport { instance as axios } from '../../axios';\nimport { UPDATE_ROOM_RESET } from '../redux/constants/RoomConstants';\n\n\ntype TId = {\n    id: IRoom['_id']\n}\n\nconst AdminEditRoomScreen = () => {\n\n    const dispatch = useDispatch();\n\n    let navigate = useNavigate();\n    let { id } = useParams<TId>();\n\n    const [name, setName] = useState<IRoom['name']>(\"\");\n    const [description, setDescription] = useState<IRoom['description']>(\"\");\n    const [address, setAddress] = useState<IRoom['address']>(\"\");\n    const [guestCapacity, setGuestCapacity] = useState<IRoom['guestCapacity']>(0);\n    const [numOfBeds, setNumOfBeds] = useState<IRoom['numOfBeds']>(0);\n    const [roomType, setRoomType] = useState<IRoom['category'] | string>(\"King\");\n    const [internet, setInternet] = useState<IRoom['internet']>(false);\n    const [airConditioned, setAirConditioned] = useState<IRoom['airConditioned']>(false);\n    const [breakfast, setBreakfast] = useState<IRoom['breakfast']>(false);\n    const [petsAllowed, setPetsAllowed] = useState<IRoom['petsAllowed']>(false);\n    const [roomCleaning, setRoomCleaning] = useState<IRoom['roomCleaning']>(false);\n    const [price, setPrice] = useState<IRoom['pricePerNight']>(0);\n    const [oldImages, setOldImages] = useState<TImage[]>([]);\n    const [newImages, setNewImages] = useState<any>(null);\n\n    const { loading: loadingUpdate, success: successUpdate, error: errorUpdate } = useSelector((state: RootStateOrAny) => state.roomUpdate);\n\n    const { room, loading, error } = useSelector((state: RootStateOrAny) => state.roomDetails);\n\n    useEffect(() => {\n        if (successUpdate) {\n            dispatch(getRoomDetails(id as string));\n            navigate(\"/admin/rooms\");\n            dispatch({ type: UPDATE_ROOM_RESET });\n        }\n        if (!room?.name || room._id !== id) {\n            dispatch(getRoomDetails(id as string));\n        } else {\n            setName(room.name);\n            setDescription(room.description);\n            setAddress(room.address);\n            setGuestCapacity(room.guestCapacity);\n            setNumOfBeds(room.numOfBeds);\n            setRoomType(room.roomType);\n            setInternet(room.internet);\n            setAirConditioned(room.petsAllowed);\n            setBreakfast(room.breakfast);\n            setPetsAllowed(room.petsAllowed);\n            setRoomCleaning(room.roomCleaning);\n            setPrice(room.pricePerNight);\n            setOldImages(room.images);\n        }\n    }, [dispatch, room, successUpdate, id]);\n\n    const removeImage = (imageId: string) => {\n        const removedImage: any = oldImages.filter((e: TImage) => e._id !== imageId);\n        setOldImages(removedImage);\n    }\n\n    const uploadImagesHandler = (e: React.FormEvent) => {\n\n        const target = e.target as HTMLInputElement;\n\n        if (!target.files?.length) {\n            return;\n        }\n\n        const files = target.files;\n\n        setNewImages(files);\n\n    }\n\n    const handlerSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n\n        for (let i = 0; i < newImages?.length; i++) {\n            formData.append(\"image\", newImages[i]);\n        }\n\n        try {\n\n            const config = {\n                headers: {\n                    \"Content-Type\": \"multipart/form-data\"\n                }\n            }\n\n            const { data } = await axios.post(\"/api/uploads\", formData, config);\n\n            const allImages: TImage[] = oldImages;\n            for (let i = 0; i < data?.length; i++) {\n                allImages.push({ image: `/${data[i].path.toString().replace(\"\\\\\", \"/\")}` });\n            }\n\n            dispatch(updateRoom(id as string, { name, description, address, guestCapacity, numOfBeds, category: roomType, internet, airConditioned, breakfast, petsAllowed, roomCleaning, pricePerNight: price, images: allImages }));\n\n        } catch (error: any) {\n            console.log(error.message);\n        }\n\n    }\n\n    return (\n        <Container>\n            <Row>\n                <Col md={12}>\n                    <h3 className=\"mb-3\">Edit Room</h3>\n                </Col>\n            </Row>\n            <Row>\n                <Col md={12}>\n                    {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> :\n                        <>\n                            {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n                            <Form onSubmit={handlerSubmit}>\n                                <FormGroup controlId=\"name\">\n                                    <Form.Label>\n                                        Name\n                                    </Form.Label>\n                                    <Form.Control\n                                        type=\"text\"\n                                        placeholder=\"Name\"\n                                        name=\"name\"\n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                        required\n                                    />\n                                </FormGroup>\n                                <FormGroup className=\"mt-3 mb-3\">\n                                    <FloatingLabel controlId=\"description\" label=\"Description\">\n                                        <Form.Control\n                                            as=\"textarea\"\n                                            placeholder=\"Description\"\n                                            name=\"description\"\n                                            value={description}\n                                            onChange={(e) => setDescription(e.target.value)}\n                                            style={{ height: '100px' }}\n                                            required\n                                        />\n                                    </FloatingLabel>\n                                </FormGroup>\n                                <FormGroup controlId=\"address\">\n                                    <Form.Label>\n                                        Address\n                                    </Form.Label>\n                                    <Form.Control\n                                        type=\"text\"\n                                        placeholder=\"Address\"\n                                        name=\"address\"\n                                        value={address}\n                                        onChange={(e) => setAddress(e.target.value)}\n                                        required\n                                    />\n                                </FormGroup>\n                                <Row className=\"mt-3 mb-3\">\n                                    <Col md={4} sm={12}>\n                                        <FormGroup controlId=\"guestCapacity\">\n                                            <Form.Label>\n                                                Guest Capacity\n                                            </Form.Label>\n                                            <Form.Select\n                                                name=\"guestCapacity\"\n                                                value={Number(guestCapacity)}\n                                                onChange={(e) => setGuestCapacity(Number(e.target.value))}\n                                                aria-label=\"Default select example\"\n                                            >\n                                                {[1, 2, 3, 4, 5].map((guest: number) =>\n                                                    <option value={guest} key={guest}>{guest}</option>\n                                                )}\n                                            </Form.Select>\n                                        </FormGroup>\n                                    </Col>\n                                    <Col md={4} sm={12}>\n                                        <FormGroup controlId=\"numOfBeds\">\n                                            <Form.Label>\n                                                Num Of Beds\n                                            </Form.Label>\n                                            <Form.Select\n                                                name=\"numOfBeds\"\n                                                value={Number(numOfBeds)}\n                                                onChange={(e) => setNumOfBeds(Number(e.target.value))}\n                                                aria-label=\"Default select example\"\n                                            >\n                                                {[1, 2, 3, 4, 5].map((numOfBeds: number) =>\n                                                    <option value={numOfBeds} key={numOfBeds}>{numOfBeds}</option>\n                                                )}\n                                            </Form.Select>\n                                        </FormGroup>\n                                    </Col>\n                                    <Col md={4} sm={12}>\n                                        <FormGroup controlId=\"roomType\">\n                                            <Form.Label>Room Type</Form.Label>\n                                            <Form.Select\n                                                name=\"roomType\"\n                                                value={roomType}\n                                                onChange={(e) => setRoomType(e.target.value)}\n                                                aria-label=\"Default select example\"\n                                            >\n                                                <option value=\"King\">King</option>\n                                                <option value=\"Single\">Single</option>\n                                                <option value=\"Twins\">Twins</option>\n                                            </Form.Select>\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row className=\"mb-3\">\n                                    <Col md={2} sm={12}>\n                                        <Form.Group controlId=\"internet\">\n                                            <Form.Check\n                                                type=\"checkbox\"\n                                                label=\"Internet\"\n                                                checked={internet ? true : false}\n                                                onChange={(e) => setInternet(!internet)}\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col md={2} sm={12}>\n                                        <Form.Group controlId=\"breakfast\">\n                                            <Form.Check\n                                                type=\"checkbox\"\n                                                label=\"Breakfast\"\n                                                checked={breakfast ? true : false}\n                                                onChange={(e) => setBreakfast(!breakfast)}\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col md={2} sm={12}>\n                                        <Form.Group controlId=\"airConditioned\">\n                                            <Form.Check\n                                                type=\"checkbox\"\n                                                label=\"Air Conditioned\"\n                                                checked={airConditioned ? true : false}\n                                                onChange={(e) => setAirConditioned(!airConditioned)}\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col md={2} sm={12}>\n                                        <Form.Group controlId=\"petsAllowed\">\n                                            <Form.Check\n                                                type=\"checkbox\"\n                                                label=\"Pets Allowed\"\n                                                checked={petsAllowed ? true : false}\n                                                onChange={(e) => setPetsAllowed(!petsAllowed)}\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col md={2} sm={12}>\n                                        <Form.Group controlId=\"roomCleaning\">\n                                            <Form.Check\n                                                type=\"checkbox\"\n                                                label=\"Room Cleaning\"\n                                                checked={roomCleaning ? true : false}\n                                                onChange={(e) => setRoomCleaning(!roomCleaning)}\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                </Row>\n                                <FormGroup className=\"mb-3\" controlId=\"price\">\n                                    <Form.Label>\n                                        Price\n                                    </Form.Label>\n                                    <Form.Control\n                                        type=\"number\"\n                                        value={Number(price)}\n                                        onChange={(e) => setPrice(Number(e.target.value))}\n                                        placeholder=\"Price Per Night\"\n                                        min=\"10\"\n                                        max=\"100\"\n                                    />\n                                </FormGroup>\n                                <FormGroup className=\"mb-3\" controlId=\"images\">\n                                    <Form.Label>\n                                        Images\n                                    </Form.Label>\n                                    <Form.Control\n                                        type=\"file\"\n                                        name=\"images\"\n                                        onChange={uploadImagesHandler}\n                                        multiple\n                                        required={oldImages.length === 0 ? true : false}\n                                    />\n                                </FormGroup>\n                                <div className=\"images-preview mb-4\">\n                                    <Row>\n                                        {oldImages.map((image: TImage) =>\n                                            <Col md={3} key={image._id}>\n                                                <Image src={image.image} alt=\"Image Room\" fluid />\n                                                <Button\n                                                    className=\"mt-2\"\n                                                    onClick={() => removeImage(image._id as string)}\n                                                >\n                                                    Remove Image\n                                                </Button>\n                                            </Col>\n                                        )}\n                                    </Row>\n                                </div>\n                                <FormGroup className=\"mb-4\" >\n                                    <Button type=\"submit\">\n                                        {loadingUpdate ? <Loader /> : `Update`}\n                                    </Button>\n                                </FormGroup>\n                            </Form>\n                        </>\n                    }\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default AdminEditRoomScreen"]},"metadata":{},"sourceType":"module"}