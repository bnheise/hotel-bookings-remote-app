{"ast":null,"code":"var _jsxFileName = \"/Users/brianheise/liferay/training/remote/hotel-booking/frontend/src/components/ProtectedRoute.tsx\",\n    _s = $RefreshSig$();\n\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { useAuthStatus } from '../hooks/useAuthStatus';\nimport Loader from './Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = () => {\n  _s();\n\n  const {\n    loggedIn,\n    checkingStatus\n  } = useAuthStatus();\n\n  if (checkingStatus) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 16\n    }, this);\n  }\n\n  return loggedIn ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 23\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 36\n  }, this);\n};\n\n_s(ProtectedRoute, \"UcPkRxne9X7ts6gkbV8glGwu/J0=\", false, function () {\n  return [useAuthStatus];\n});\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/Users/brianheise/liferay/training/remote/hotel-booking/frontend/src/components/ProtectedRoute.tsx"],"names":["Navigate","Outlet","useAuthStatus","Loader","ProtectedRoute","loggedIn","checkingStatus"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,kBAAjC;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAEzB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA+BJ,aAAa,EAAlD;;AAEA,MAAGI,cAAH,EAAmB;AACf,wBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,SAAOD,QAAQ,gBAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UAAH,gBAAgB,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAA/B;AAEH,CAVD;;GAAMD,c;UAEmCF,a;;;KAFnCE,c;AAYN,eAAeA,cAAf","sourcesContent":["import { Navigate, Outlet } from 'react-router-dom';\nimport { useAuthStatus } from '../hooks/useAuthStatus';\nimport Loader from './Loader';\n\nconst ProtectedRoute = () => {\n\n    const { loggedIn, checkingStatus } = useAuthStatus();\n\n    if(checkingStatus) {\n        return <Loader />\n    }\n\n    return loggedIn ? <Outlet /> : <Navigate to=\"/\" />\n\n}\n\nexport default ProtectedRoute;"]},"metadata":{},"sourceType":"module"}