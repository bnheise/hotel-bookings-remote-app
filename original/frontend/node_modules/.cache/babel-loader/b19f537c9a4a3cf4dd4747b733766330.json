{"ast":null,"code":"var _jsxFileName = \"/Users/brianheise/liferay/training/remote/hotel-booking/frontend/src/screens/RegisterScreen.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { instance as axios } from '../axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport { register } from '../redux/actions/UserActions';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterScreen = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  let navigate = useNavigate();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [avatar, setAvatar] = useState(\"\");\n  const {\n    loading,\n    success,\n    error\n  } = useSelector(state => state.userRegister);\n  const {\n    userInfo\n  } = useSelector(state => state.userLogin);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(register({\n      name,\n      email,\n      password,\n      avatar\n    }));\n  };\n\n  const handleUpload = async e => {\n    var _target$files;\n\n    const target = e.target;\n\n    if (!((_target$files = target.files) !== null && _target$files !== void 0 && _target$files.length)) {\n      return;\n    }\n\n    const file = target.files[0];\n    const formData = new FormData();\n    formData.append(\"image\", file);\n\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      };\n      const {\n        data\n      } = await axios.post(\"/api/uploads\", formData, config);\n      setAvatar(data[0].path);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  useEffect(() => {\n    if (userInfo) {\n      navigate(\"/\");\n    }\n  }, [dispatch, userInfo, success]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-4\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"name\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: name,\n              placeholder: \"Full Name\",\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"email\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"E-Mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              value: email,\n              placeholder: \"E-Mail\",\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"password\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              value: password,\n              placeholder: \"Password\",\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"avatar\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"file\",\n              placeholder: \"Avatar\",\n              name: \"image\",\n              onChange: handleUpload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 44\n              }, this) : `Register`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegisterScreen, \"gc9qBMVSWtilhNp4OS6xLFyi/jo=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useSelector];\n});\n\n_c = RegisterScreen;\nexport default RegisterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"sources":["/Users/brianheise/liferay/training/remote/hotel-booking/frontend/src/screens/RegisterScreen.tsx"],"names":["React","useState","useEffect","useNavigate","instance","axios","useSelector","useDispatch","Container","Row","Col","Form","Button","register","Message","Loader","RegisterScreen","dispatch","navigate","name","setName","email","setEmail","password","setPassword","avatar","setAvatar","loading","success","error","state","userRegister","userInfo","userLogin","handleSubmit","e","preventDefault","handleUpload","target","files","length","file","formData","FormData","append","config","headers","data","post","path","console","log","message","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { instance as axios } from '../axios';\nimport { useSelector, useDispatch, RootStateOrAny } from 'react-redux';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport { register } from '../redux/actions/UserActions';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { IUser } from '../interfaces/IUser';\n\nconst RegisterScreen: React.FC = () => {\n\n    const dispatch = useDispatch();\n    let navigate = useNavigate();\n\n    const [name, setName] = useState<IUser['name']>(\"\");\n    const [email, setEmail] = useState<IUser['email']>(\"\");\n    const [password, setPassword] = useState<IUser['password']>(\"\");\n    const [avatar, setAvatar] = useState<IUser['avatar']>(\"\");\n\n    const { loading, success, error } = useSelector((state: RootStateOrAny) => state.userRegister);\n    const { userInfo } = useSelector((state: RootStateOrAny) => state.userLogin);\n\n    const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        dispatch(register({ name, email, password, avatar }));\n    }\n\n    const handleUpload = async (e: React.ChangeEvent) => {\n\n        const target = e.target as HTMLInputElement;\n\n        if (!target.files?.length) {\n            return;\n        }\n\n        const file = target.files[0];\n\n        const formData = new FormData();\n\n        formData.append(\"image\", file);\n\n        try {\n\n            const config = {\n                headers: {\n                    \"Content-Type\": \"multipart/form-data\"\n                }\n            }\n\n            const { data } = await axios.post(\"/api/uploads\", formData, config);\n\n            setAvatar(data[0].path);\n\n        } catch (error: any) {\n            console.log(error.message);\n        }\n\n    }\n\n    useEffect(() => {\n        if (userInfo) {\n            navigate(\"/\");\n        }\n    }, [dispatch, userInfo, success]);\n\n\n    return (\n        <Container>\n            <Row className='justify-content-center'>\n                <Col xs={12} md={6}>\n                    <h2 className=\"mb-4\">Login</h2>\n                    {error && <Message variant=\"danger\">{error}</Message>}\n                    <Form onSubmit={handleSubmit}>\n                        <Form.Group controlId=\"name\" className=\"mb-3\">\n                            <Form.Label>Full Name</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                value={name}\n                                placeholder=\"Full Name\"\n                                onChange={(e) => setName(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId=\"email\" className=\"mb-3\">\n                            <Form.Label>E-Mail</Form.Label>\n                            <Form.Control\n                                type=\"email\"\n                                value={email}\n                                placeholder=\"E-Mail\"\n                                onChange={(e) => setEmail(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId=\"password\" className=\"mb-3\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                value={password}\n                                placeholder=\"Password\"\n                                onChange={(e) => setPassword(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId=\"avatar\" className=\"mb-3\">\n                            <Form.Label>Avatar</Form.Label>\n                            <Form.Control\n                                type=\"file\"\n                                placeholder=\"Avatar\"\n                                name=\"image\"\n                                onChange={handleUpload}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Button variant=\"primary\" type=\"submit\">\n                                {loading ? <Loader /> : `Register`}\n                            </Button>\n                        </Form.Group>\n                    </Form>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default RegisterScreen;\n"]},"metadata":{},"sourceType":"module"}