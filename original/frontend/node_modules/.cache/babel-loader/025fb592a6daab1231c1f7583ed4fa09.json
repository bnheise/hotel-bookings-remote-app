{"ast":null,"code":"import { createStore, compose, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { usersFetchReducer, userDetailsReducer, userUpdateReducer, userDeleteReducer, userLoginReducer, userRegisterReducer, profileUpdateReducer, passwordUpdateReducer } from './reducers/UserReducers';\nimport { roomsFetchReducer, roomDetailsReducer, roomCreateReviewReducer, roomCreateReducer, roomUpdateReducer, roomDeleteReducer } from './reducers/RoomReducers';\nimport { bookingsFetchReducer, bookingDeleteReducer, roomBookingCheckReducer, bookingCreateReducer, bookedDatesReducer, BookingsMyReducer } from './reducers/BookingReducers';\nconst composeEnhancer = window && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst rootReducers = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  profileUpdate: profileUpdateReducer,\n  passwordUpdate: passwordUpdateReducer,\n  usersFetch: usersFetchReducer,\n  userDetails: userDetailsReducer,\n  userUpdate: userUpdateReducer,\n  userDelete: userDeleteReducer,\n  roomsFetch: roomsFetchReducer,\n  roomDetails: roomDetailsReducer,\n  roomCreateReview: roomCreateReviewReducer,\n  roomCreate: roomCreateReducer,\n  roomUpdate: roomUpdateReducer,\n  roomDelete: roomDeleteReducer,\n  roomBookingCheck: roomBookingCheckReducer,\n  bookingsFetch: bookingsFetchReducer,\n  bookingDelete: bookingDeleteReducer,\n  bookedDates: bookedDatesReducer,\n  bookingCreate: bookingCreateReducer,\n  BookingsMy: BookingsMyReducer\n});\nconst userInfoFromStorage = JSON.parse(localStorage.getItem(\"userInfo\"));\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst store = createStore(rootReducers, initialState, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["/Users/brianheise/liferay/training/remote/hotel-booking/frontend/src/redux/store.tsx"],"names":["createStore","compose","applyMiddleware","combineReducers","thunk","usersFetchReducer","userDetailsReducer","userUpdateReducer","userDeleteReducer","userLoginReducer","userRegisterReducer","profileUpdateReducer","passwordUpdateReducer","roomsFetchReducer","roomDetailsReducer","roomCreateReviewReducer","roomCreateReducer","roomUpdateReducer","roomDeleteReducer","bookingsFetchReducer","bookingDeleteReducer","roomBookingCheckReducer","bookingCreateReducer","bookedDatesReducer","BookingsMyReducer","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","rootReducers","userLogin","userRegister","profileUpdate","passwordUpdate","usersFetch","userDetails","userUpdate","userDelete","roomsFetch","roomDetails","roomCreateReview","roomCreate","roomUpdate","roomDelete","roomBookingCheck","bookingsFetch","bookingDelete","bookedDates","bookingCreate","BookingsMy","userInfoFromStorage","JSON","parse","localStorage","getItem","initialState","userInfo","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,iBAAT,EAA4BC,kBAA5B,EAAgDC,iBAAhD,EAAmEC,iBAAnE,EAAsFC,gBAAtF,EAAwGC,mBAAxG,EAA6HC,oBAA7H,EAAmJC,qBAAnJ,QAAgL,yBAAhL;AACA,SAAQC,iBAAR,EAA2BC,kBAA3B,EAA+CC,uBAA/C,EAAwEC,iBAAxE,EAA2FC,iBAA3F,EAA8GC,iBAA9G,QAAuI,yBAAvI;AACA,SAASC,oBAAT,EAA+BC,oBAA/B,EAAqDC,uBAArD,EAA8EC,oBAA9E,EAAoGC,kBAApG,EAAwHC,iBAAxH,QAAiJ,4BAAjJ;AAEA,MAAMC,eAAe,GAAIC,MAAM,IAAKA,MAAD,CAAgBC,oCAA3B,IAAoE1B,OAA5F;AAEA,MAAM2B,YAAY,GAAGzB,eAAe,CAAC;AACnC0B,EAAAA,SAAS,EAAEpB,gBADwB;AAEnCqB,EAAAA,YAAY,EAAEpB,mBAFqB;AAGnCqB,EAAAA,aAAa,EAAEpB,oBAHoB;AAInCqB,EAAAA,cAAc,EAAEpB,qBAJmB;AAKnCqB,EAAAA,UAAU,EAAE5B,iBALuB;AAMnC6B,EAAAA,WAAW,EAAE5B,kBANsB;AAOnC6B,EAAAA,UAAU,EAAE5B,iBAPuB;AAQnC6B,EAAAA,UAAU,EAAE5B,iBARuB;AASnC6B,EAAAA,UAAU,EAAExB,iBATuB;AAUnCyB,EAAAA,WAAW,EAAExB,kBAVsB;AAWnCyB,EAAAA,gBAAgB,EAAExB,uBAXiB;AAYnCyB,EAAAA,UAAU,EAAExB,iBAZuB;AAanCyB,EAAAA,UAAU,EAAExB,iBAbuB;AAcnCyB,EAAAA,UAAU,EAAExB,iBAduB;AAenCyB,EAAAA,gBAAgB,EAAEtB,uBAfiB;AAgBnCuB,EAAAA,aAAa,EAAEzB,oBAhBoB;AAiBnC0B,EAAAA,aAAa,EAAEzB,oBAjBoB;AAkBnC0B,EAAAA,WAAW,EAAEvB,kBAlBsB;AAmBnCwB,EAAAA,aAAa,EAAEzB,oBAnBoB;AAoBnC0B,EAAAA,UAAU,EAAExB;AApBuB,CAAD,CAApC;AAuBA,MAAMyB,mBAAmB,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBzB,EAAAA,SAAS,EAAE;AACT0B,IAAAA,QAAQ,EAAEN;AADD;AADQ,CAArB;AAMA,MAAMO,KAAK,GAAGxD,WAAW,CACvB4B,YADuB,EAEvB0B,YAFuB,EAGvB7B,eAAe,CAACvB,eAAe,CAACE,KAAD,CAAhB,CAHQ,CAAzB;AAMA,eAAeoD,KAAf","sourcesContent":["import { createStore, compose, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { usersFetchReducer, userDetailsReducer, userUpdateReducer, userDeleteReducer, userLoginReducer, userRegisterReducer, profileUpdateReducer, passwordUpdateReducer } from './reducers/UserReducers';\nimport {roomsFetchReducer, roomDetailsReducer, roomCreateReviewReducer, roomCreateReducer, roomUpdateReducer, roomDeleteReducer } from './reducers/RoomReducers';\nimport { bookingsFetchReducer, bookingDeleteReducer, roomBookingCheckReducer, bookingCreateReducer, bookedDatesReducer, BookingsMyReducer } from './reducers/BookingReducers';\n\nconst composeEnhancer = (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst rootReducers = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  profileUpdate: profileUpdateReducer,\n  passwordUpdate: passwordUpdateReducer,\n  usersFetch: usersFetchReducer,\n  userDetails: userDetailsReducer,\n  userUpdate: userUpdateReducer,\n  userDelete: userDeleteReducer,\n  roomsFetch: roomsFetchReducer,\n  roomDetails: roomDetailsReducer,\n  roomCreateReview: roomCreateReviewReducer,\n  roomCreate: roomCreateReducer,\n  roomUpdate: roomUpdateReducer,\n  roomDelete: roomDeleteReducer,\n  roomBookingCheck: roomBookingCheckReducer,\n  bookingsFetch: bookingsFetchReducer,\n  bookingDelete: bookingDeleteReducer,\n  bookedDates: bookedDatesReducer,\n  bookingCreate: bookingCreateReducer,\n  BookingsMy: BookingsMyReducer\n});\n\nconst userInfoFromStorage = JSON.parse(localStorage.getItem(\"userInfo\")!);\n\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\n\nconst store = createStore(\n  rootReducers,\n  initialState,\n  composeEnhancer(applyMiddleware(thunk))\n);\n\nexport default store;"]},"metadata":{},"sourceType":"module"}