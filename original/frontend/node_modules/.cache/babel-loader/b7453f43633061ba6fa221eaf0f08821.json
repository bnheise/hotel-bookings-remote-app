{"ast":null,"code":"import { instance as axios } from '../../axios';\nimport * as actions from '../constants/BookingConstants';\nexport const checkRoomBooking = (id, checkInDate, checkOutDate) => async dispatch => {\n  try {\n    dispatch({\n      type: actions.CHECK_ROOM_BOOKING_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/JSON\"\n      }\n    };\n    await axios.post(`/api/bookings/check`, {\n      id,\n      checkInDate,\n      checkOutDate\n    }, config);\n    dispatch({\n      type: actions.CHECK_ROOM_BOOKING_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: actions.CHECK_ROOM_BOOKING_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createBooking = bookingData => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actions.CREATE_BOOKING_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/JSON\",\n        \"Authorization\": `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.post(`/api/bookings`, bookingData, config);\n    dispatch({\n      type: actions.CREATE_BOOKING_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: actions.CREATE_BOOKING_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getBookedDates = roomId => async dispatch => {\n  try {\n    dispatch({\n      type: actions.GET_BOOKED_DATES_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/bookings/dates/${roomId}`);\n    dispatch({\n      type: actions.GET_BOOKED_DATES_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: actions.GET_BOOKED_DATES_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getMyBookings = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actions.GET_MY_BOOKINGS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/JSON\",\n        \"Authorization\": `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/bookings/me`, config);\n    dispatch({\n      type: actions.GET_MY_BOOKINGS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: actions.GET_MY_BOOKINGS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getAllBookings = currentPage => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actions.FETCH_BOOKINGS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/JSON\",\n        \"Authorization\": `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/bookings/?pageNumber=${currentPage}`, config);\n    dispatch({\n      type: actions.FETCH_BOOKINGS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: actions.FETCH_BOOKINGS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteBooking = bookingId => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actions.DELETE_BOOKING_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Authorization\": `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/bookings/${bookingId}`, config);\n    dispatch({\n      type: actions.DELETE_BOOKING_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: actions.DELETE_BOOKING_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/brianheise/liferay/training/remote/hotel-booking/frontend/src/redux/actions/BookingActions.tsx"],"names":["instance","axios","actions","checkRoomBooking","id","checkInDate","checkOutDate","dispatch","type","CHECK_ROOM_BOOKING_REQUEST","config","headers","post","CHECK_ROOM_BOOKING_SUCCESS","error","CHECK_ROOM_BOOKING_FAIL","payload","response","data","message","createBooking","bookingData","getState","CREATE_BOOKING_REQUEST","userLogin","userInfo","token","CREATE_BOOKING_SUCCESS","CREATE_BOOKING_FAIL","getBookedDates","roomId","GET_BOOKED_DATES_REQUEST","get","GET_BOOKED_DATES_SUCCESS","GET_BOOKED_DATES_FAIL","getMyBookings","GET_MY_BOOKINGS_REQUEST","GET_MY_BOOKINGS_SUCCESS","GET_MY_BOOKINGS_FAIL","getAllBookings","currentPage","FETCH_BOOKINGS_REQUEST","FETCH_BOOKINGS_SUCCESS","FETCH_BOOKINGS_FAIL","deleteBooking","bookingId","DELETE_BOOKING_REQUEST","delete","DELETE_BOOKING_SUCCESS","DELETE_BOOKING_FAIL"],"mappings":"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","sourcesContent":["import { Dispatch } from \"redux\";\nimport { instance as axios } from '../../axios';\nimport * as actions from '../constants/BookingConstants';\nimport { IRoom } from \"../../interfaces/IRoom\";\nimport { IBooking, ICreateBooking } from \"../../interfaces/IBooking\";\n\nexport const checkRoomBooking = (id: IRoom['_id'], checkInDate: Date, checkOutDate: Date) => async (dispatch: Dispatch) => {\n\n    try {\n        dispatch({ type: actions.CHECK_ROOM_BOOKING_REQUEST });\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/JSON\",\n            }\n        }\n\n        await axios.post(`/api/bookings/check`, { id, checkInDate, checkOutDate }, config);\n\n        dispatch({ type: actions.CHECK_ROOM_BOOKING_SUCCESS });\n\n    } catch (error: any) {\n        dispatch({\n            type: actions.CHECK_ROOM_BOOKING_FAIL,\n            payload: error.response && error.response.data.message ?\n                error.response.data.message : error.message\n        });\n    }\n\n}\n\nexport const createBooking = (bookingData: ICreateBooking) => async (dispatch: Dispatch, getState: any) => {\n\n    try {\n        dispatch({ type: actions.CREATE_BOOKING_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/JSON\",\n                \"Authorization\": `Bearer ${userInfo.token}`\n            }\n        }\n\n        await axios.post(`/api/bookings`, bookingData, config);\n\n        dispatch({ type: actions.CREATE_BOOKING_SUCCESS });\n\n    } catch (error: any) {\n        dispatch({\n            type: actions.CREATE_BOOKING_FAIL,\n            payload: error.response && error.response.data.message ?\n                error.response.data.message : error.message\n        });\n    }\n\n}\n\nexport const getBookedDates = (roomId: IRoom['_id']) => async (dispatch: Dispatch) => {\n\n    try {\n        dispatch({ type: actions.GET_BOOKED_DATES_REQUEST });\n\n        const { data } = await axios.get(`/api/bookings/dates/${roomId}`);\n\n        dispatch({ type: actions.GET_BOOKED_DATES_SUCCESS, payload: data });\n\n    } catch (error: any) {\n        dispatch({\n            type: actions.GET_BOOKED_DATES_FAIL,\n            payload: error.response && error.response.data.message ?\n                error.response.data.message : error.message\n        });\n    }\n\n}\n\nexport const getMyBookings = () => async (dispatch: Dispatch, getState: any) => {\n\n    try {\n        dispatch({ type: actions.GET_MY_BOOKINGS_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/JSON\",\n                \"Authorization\": `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/bookings/me`, config);\n\n        dispatch({ type: actions.GET_MY_BOOKINGS_SUCCESS, payload: data });\n\n    } catch (error: any) {\n        dispatch({\n            type: actions.GET_MY_BOOKINGS_FAIL,\n            payload: error.response && error.response.data.message ?\n                error.response.data.message : error.message\n        });\n    }\n\n}\n\nexport const getAllBookings = (currentPage: number) => async (dispatch: Dispatch, getState: any) => {\n\n    try {\n        dispatch({ type: actions.FETCH_BOOKINGS_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/JSON\",\n                \"Authorization\": `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/bookings/?pageNumber=${currentPage}`, config);\n\n        dispatch({ type: actions.FETCH_BOOKINGS_SUCCESS, payload: data });\n\n    } catch (error: any) {\n        dispatch({\n            type: actions.FETCH_BOOKINGS_FAIL,\n            payload: error.response && error.response.data.message ?\n                error.response.data.message : error.message\n        });\n    }\n\n}\n\nexport const deleteBooking = (bookingId: IBooking['_id']) => async (dispatch: Dispatch, getState: any) => {\n\n    try {\n        dispatch({ type: actions.DELETE_BOOKING_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                \"Authorization\": `Bearer ${userInfo.token}`\n            }\n        };\n\n        await axios.delete(`/api/bookings/${bookingId}`, config);\n\n        dispatch({ type: actions.DELETE_BOOKING_SUCCESS });\n\n    } catch (error: any) {\n        dispatch({\n            type: actions.DELETE_BOOKING_FAIL,\n            payload: error.response && error.response.data.message ?\n                error.response.data.message : error.message\n        });\n    }\n\n}"]},"metadata":{},"sourceType":"module"}